(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{400:function(_,v,t){"use strict";t.r(v);var e=t(45),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[_._v("#")]),_._v(" 缓存")]),_._v(" "),t("p",[_._v("http 缓存机制是 web 性能优化的重要手段，其分为 "),t("strong",[_._v("强制缓存")]),_._v(" 和 "),t("strong",[_._v("协商缓存")])]),_._v(" "),t("h3",{attrs:{id:"强制缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[_._v("#")]),_._v(" 强制缓存")]),_._v(" "),t("hr"),_._v(" "),t("h4",{attrs:{id:"_1、强制缓存是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、强制缓存是什么"}},[_._v("#")]),_._v(" 1、强制缓存是什么？")]),_._v(" "),t("p",[_._v("强制缓存是第一次请求服务器获取静态资源后，在缓存有效期内，不会再请求服务器，而是直接使用缓存的资源")]),_._v(" "),t("p",[_._v("强制缓存状态码全部是200，会显示 "),t("code",[_._v("from memory cache")]),_._v("(内存中读取)，当页面关闭后内存被释放再次打开，会显示 "),t("code",[_._v("from disk cache")]),_._v("(硬盘中读取)。")]),_._v(" "),t("h4",{attrs:{id:"_2、有效期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、有效期"}},[_._v("#")]),_._v(" 2、有效期")]),_._v(" "),t("p",[_._v("有效期分为 "),t("code",[_._v("HTTP 1.1")]),_._v(" 和 "),t("code",[_._v("HTTP 1.0")]),_._v(" 两个版本，"),t("code",[_._v("HTTP 1.1")]),_._v(" 优先于 "),t("code",[_._v("HTTP 1.0")]),_._v("。")]),_._v(" "),t("p",[t("code",[_._v("HTTP 1.1")]),_._v(" 版本中，强制缓存使用 "),t("code",[_._v("Cache-Control")]),_._v(" 标识，"),t("code",[_._v("Cache-Control")]),_._v(" 有多个值：")]),_._v(" "),t("ul",[t("li",[_._v("no-store : 所有内容都不缓存，不使用强制缓存和协商缓存")]),_._v(" "),t("li",[_._v("no-cache : 不使用强制缓存，使用协商缓存")]),_._v(" "),t("li",[_._v("private : 响应消息的全部或部分是针对单个用户的，并且不得由共享高速缓存（例如代理服务器）进行高速缓存")]),_._v(" "),t("li",[_._v("public : 可以由共享高速缓存（例如代理服务器）进行高速缓存")]),_._v(" "),t("li",[_._v("max-age : 缓存内容将在多少秒后过期（单位：秒）")])]),_._v(" "),t("p",[t("code",[_._v("HTTP 1.0")]),_._v(" 版本中，强制缓存使用 "),t("code",[_._v("Expires")]),_._v(" 标识，值是过期时间的时间戳。")]),_._v(" "),t("h3",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[_._v("#")]),_._v(" 协商缓存")]),_._v(" "),t("hr"),_._v(" "),t("h4",{attrs:{id:"_1、协商缓存是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、协商缓存是什么"}},[_._v("#")]),_._v(" 1、协商缓存是什么？")]),_._v(" "),t("p",[_._v("协商缓存是第一次请求服务器获取静态资源后，之后每次再请求资源，服务器会拿到浏览器请求的标识和现有资源对比，如果未修改会返回给浏览器 304 状态\b；如果修改了会返回新的资源和标识。")]),_._v(" "),t("h4",{attrs:{id:"_2、资源标识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、资源标识"}},[_._v("#")]),_._v(" 2、\b资源标识")]),_._v(" "),t("p",[_._v("同样，资源标识也分为 "),t("code",[_._v("HTTP 1.1")]),_._v(" 和 "),t("code",[_._v("HTTP 1.0")]),_._v(" 两个版本，"),t("code",[_._v("HTTP 1.1")]),_._v(" 优先于 "),t("code",[_._v("HTTP 1.0")]),_._v("。")]),_._v(" "),t("p",[t("code",[_._v("HTTP 1.1")]),_._v(" 版本中，协商缓存通过服务器返回的 "),t("code",[_._v("Etag")]),_._v(" 来设置\b标识，\b再次请求时浏览器会携带 "),t("code",[_._v("If-None-Match")]),_._v(" 请求头将标识提供给服务器进行对比。")]),_._v(" "),t("p",[t("code",[_._v("HTTP 1.0")]),_._v(" 版本中，协商缓存通过服务器返回的 "),t("code",[_._v("Last-Modified")]),_._v(" 最后修改时间来设置\b标识，\b再次请求时浏览器会携带 "),t("code",[_._v("If-Modified-Since")]),_._v(" 请求头将标识提供给服务器进行对比。")])])}),[],!1,null,null,null);v.default=a.exports}}]);