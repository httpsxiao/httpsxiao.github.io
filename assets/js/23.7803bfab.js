(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{379:function(t,_,v){"use strict";v.r(_);var a=v(45),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"线程和进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程和进程"}},[t._v("#")]),t._v(" 线程和进程")]),t._v(" "),v("p",[t._v("初学 JS 的时候各种资料都会介绍 JS 是单线程执行的。那线程和进程都是什么？")]),t._v(" "),v("h2",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("blockquote",[v("p",[t._v("进程是 CPU 资源分配的最小单位\n线程是 CPU 调度的最小单位")])]),t._v(" "),v("p",[t._v("这两句话比较难理解，举个例子：")]),t._v(" "),v("p",[t._v("将进程看做是工厂，线程看做是工人。")]),t._v(" "),v("p",[t._v("一个工厂可以有多个工人，也就是说"),v("strong",[t._v("一个进程可以由多个线程组成，线程是一个进程中代码不同的执行线路")])]),t._v(" "),v("p",[t._v("工厂的空间是工人们共享的，即"),v("strong",[t._v("一个进程的内存空间是它的所有线程共享的")])]),t._v(" "),v("p",[t._v("多个工厂独立存在，即"),v("strong",[t._v("进程之间是独立的，互不影响")])]),t._v(" "),v("p",[t._v("以 Chrome 为例，每打开一个 Tab 页，就是创建了一个进程，一个进程可以有多个线程（下文会详细介绍），比如渲染线程、js 线程等；每发送一个请求，就是创建了一个线程，请求结束后该线程就会被销毁。")]),t._v(" "),v("h2",{attrs:{id:"浏览器内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),v("p",[t._v("浏览器内核是多线程，一个浏览器通常由一下常驻线程组成：")]),t._v(" "),v("ul",[v("li",[t._v("GUI 渲染线程")]),t._v(" "),v("li",[t._v("Javascript 引擎线程")]),t._v(" "),v("li",[t._v("定时器触发线程")]),t._v(" "),v("li",[t._v("事件触发线程")]),t._v(" "),v("li",[t._v("异步 http 请求线程")])]),t._v(" "),v("h4",{attrs:{id:"_1-gui-渲染线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-gui-渲染线程"}},[t._v("#")]),t._v(" 1. GUI 渲染线程")]),t._v(" "),v("ul",[v("li",[t._v("负责页面的渲染，解析 HTML、CSS，构建布局树（Layout tree）并绘制。")]),t._v(" "),v("li",[t._v("负责界面需要重绘或者回流")]),t._v(" "),v("li",[t._v("负责与 JS 引擎线程交互，当 JS 引擎线程，GUI 渲染线程会被挂起")])]),t._v(" "),v("h4",{attrs:{id:"_2-javascript-引擎线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript-引擎线程"}},[t._v("#")]),t._v(" 2. Javascript 引擎线程")]),t._v(" "),v("ul",[v("li",[t._v("负责执行 js 脚本")]),t._v(" "),v("li",[t._v("负责与 GUI 交互")])]),t._v(" "),v("h4",{attrs:{id:"_3-定时器触发线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-定时器触发线程"}},[t._v("#")]),t._v(" 3. 定时器触发线程")]),t._v(" "),v("ul",[v("li",[t._v("负责执行异步定时器的线程，如： setTimeout，setInterval")]),t._v(" "),v("li",[t._v("主线程依次执行代码时，遇到定时器，会将定时器交给该线程处理，当计数完毕后，事件触发线程会将计数完毕后的事件加入到任务队列的尾部，等待 JS 引擎线程执行")])]),t._v(" "),v("h4",{attrs:{id:"_4-事件触发线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-事件触发线程"}},[t._v("#")]),t._v(" 4. 事件触发线程")]),t._v(" "),v("ul",[v("li",[t._v("负责将准备好的事件交给 JS 引擎线程执行，比如 setTimeout 定时器计数结束，http 等异步请求成功并触发回调函数，或者用户触发点击事件时，该线程会将整装待发的事件依次加入到任务队列的队尾，等待 JS 引擎线程的执行")])]),t._v(" "),v("h4",{attrs:{id:"_5-异步-http-请求线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-异步-http-请求线程"}},[t._v("#")]),t._v(" 5. 异步 http 请求线程")]),t._v(" "),v("ul",[v("li",[t._v("负责执行异步请求一类的函数的线程，如：Promise，fetch，ajax 等")]),t._v(" "),v("li",[t._v("主线程依次执行代码时，遇到异步请求，会将函数交给该线程处理，当监听到状态码变更，如果有回调函数，事件触发线程会将回调函数加入到任务队列的尾部，等待 JS 引擎线程执行")])])])}),[],!1,null,null,null);_.default=s.exports}}]);